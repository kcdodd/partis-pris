Bootstrap: debootstrap
OSVersion: jammy
MirrorURL: http://us.archive.ubuntu.com/ubuntu/

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%post
  # To avoid being prompted during apt-get
  TZ=Etc/UTC && \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
    echo $TZ > /etc/timezone

  apt-get update && apt-get upgrade -y
  apt-get install -y --no-install-recommends \
    ca-certificates \
    software-properties-common \
    apt-transport-https \
    lsb-release \
    build-essential \
    gfortran

  add-apt-repository universe restricted multiverse
  apt-get update

  apt-get install -y --no-install-recommends \
    pkg-config \
    libssl-dev \
    tar \
    zip \
    gzip \
    bzip2 \
    unzip \
    gnupg2 \
    xz-utils \
    zlib1g-dev \
    lzma \
    liblzma-dev \
    libbz2-dev \
    zstd \
    libzstd-dev \
    pigz \
    libffi-dev

  apt-get install -y --no-install-recommends \
    file \
    tcl \
    csh \
    tcsh \
    zsh \
    ssh \
    wget \
    curl \
    tmux \
    patch \
    git \
    libncurses5-dev \
    mlocate \
    chrpath \
    patchelf \
    environment-modules \
    uuid-dev \
    libgpgme11-dev \
    squashfs-tools \
    libseccomp-dev \
    libreadline-dev \
    libgmp-dev \
    libmpfr-dev \
    libmpc-dev \
    libxml2-dev \
    libxmlsec1-dev \
    libtinyxml-dev \
    libpugixml-dev \
    libsqlite3-dev \
    libpotrace-dev \
    libntirpc-dev \
    hwloc \
    libgl1 \
    libglew-dev \
    tk \
    tk-dev

  # apt-get install -y --no-install-recommends \
  #   libfftw3-dev \
  #   liblapack-dev \
  #   libopenblas-dev \
  #   libhdf5-dev

  apt-get install -y --no-install-recommends \
    python3-all-dev \
    python3-pip \
    python3-venv \
    python3.10 \
    python3.10-venv

  # # apt-get install -y \
  # #   language-pack-en \
  # #   fonts-freefont-otf \
  # #   texlive-latex-recommended \
  # #   texlive-latex-extra \
  # #   texlive-fonts-recommended \
  # #   texlive-fonts-extra \
  # #   texlive-science \
  # #   texlive-xetex \
  # #   biber \
  # #   latexmk \
  # #   xindy \
  # #   libcairo2 \
  # #   libcairo2-dev

  # make sure sh points to 'bash' instead of 'dash'
  ln -s /bin/bash /bin/sh.bash
  mv /bin/sh.bash /bin/sh

  # good base python and pip version
  update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 0
  python3 --version

  # reduce unecessary files
  apt-get remove -y software-properties-common apt-transport-https
  apt-get autoremove -y
  apt-get clean
  rm -rf /var/lib/apt/lists/*
  rm -rf /usr/share/doc/*
  rm -rf /usr/share/man/*
  rm -rf /var/cache/*

#-------------------------------------------------------------------------------
%files
  spack_config.yaml /opt/spack_config.yaml
  spack_modules.yaml /opt/spack_modules.yaml

#-------------------------------------------------------------------------------
%appinstall venv
  export SPACK_ROOT=/opt/spack
  export PATH=$SPACK_ROOT/bin:$PATH

  git clone \
    --branch=releases/v0.19 \
    --no-tags --single-branch --depth=1 -c feature.manyFiles=true \
    https://github.com/spack/spack.git \
    $SPACK_ROOT

  mv /opt/spack_config.yaml $SPACK_ROOT/etc/spack/config.yaml
  mv /opt/spack_modules.yaml $SPACK_ROOT/etc/spack/modules.yaml

  spack compiler find --scope system $(which gcc)
  spack compiler find --scope system $(which g++)
  spack compiler find --scope system $(which gfortran)

#-------------------------------------------------------------------------------
%appenv venv
  export SPACK_ROOT=/opt/spack
  export PATH=$SPACK_ROOT/bin:$PATH
  export VENV=/venv
  export VENV_PY=$VENV/.venv
  export HOME=$VENV
  export SHELL=/bin/bash
  export PIP_CACHE_DIR=/venv/.cache/pip

#-------------------------------------------------------------------------------
%apprun venv
  source $SPACK_ROOT/share/spack/setup-env.sh

  if [ ! -d "$VENV" ]; then
    echo "Virtual environment base $VENV must be bound."
    exit 1
  fi

  spack env activate -d $VENV || { spack env create -d $VENV && spack env activate -d $VENV; }
  spack install -j 4
  spack load

  if [ ! -d "$VENV_PY" ]; then
   python3 -m venv $VENV_PY
  fi

  source $VENV_PY/bin/activate

  # Execute the user's command (or start an interactive shell)
  ${@:-bash}

